{"version":3,"sources":["components/Article.js","components/ArticleForm.js","components/CreateArea.js","containers/ArticleListView.js","containers/ArticleDetailView.js","store/actions/auth.js","store/actions/actionType.js","containers/Login.js","containers/Signup.js","components/ProfileView.js","containers/Profile.js","routes.js","containers/Layout.js","App.js","serviceWorker.js","store/utility.js","store/reducers/auth.js","index.js"],"names":["Text","Typography","IconText","icon","text","React","createElement","style","marginRight","Article","prpos","itemLayout","size","pagination","onChange","page","console","log","pageSize","dataSource","data","renderItem","item","className","marginBottom","backgroundColor","Item","key","title","actions","code","strong","CommentOutlined","Meta","avatar","color","userName","substring","toUpperCase","description","href","id","type","content","TextArea","Form","Input","ArticleForm","props","handleInputChange","event","target","name","value","setState","initialize1","initialize2","article","handleFormSubmit","requestType","articleID","elements","axios","post","then","res","put","localStorage","getItem","userToken","state","onLoad","this","onSubmitCapture","label","rows","htmlType","btnText","Component","CreateArea","useState","isExpanded","changeExpanded","postID","uuid","v4","note","setNote","prevNote","placeholder","onClick","Zoom","in","Fab","ArticleList","articles","get","class","role","textAlign","message","showIcon","to","mark","ArticleDetail","handleDelete","match","params","delete","setItem","authStart","authSuccess","token","logout","removeItem","checkAuthTimeout","expirationTime","dispatch","setTimeout","antIcon","LoadingOutlined","fontSize","spin","NormalLoginForm","handleUsernameChange","evt","username","handlePasswordChange","password","handleSubmit","errorMessage","onAuth","history","push","error","loading","indicator","initialValues","remember","rules","required","prefix","UserOutlined","LockOutlined","marginLeft","connect","expirationDate","Date","getTime","RegistrationForm","handleEmailChange","email","handlePassword1Change","password1","handlePassword2Change","password2","whitespace","MailOutlined","pattern","min","hasFeedback","Password","dependencies","getFieldValue","validator","rule","Promise","reject","resolve","ProfileView","user","data-toggle","data-target","totalPost","tabindex","aria-labelledby","aria-hidden","data-dismiss","aria-label","for","Profile","userdata","result","length","marginTop","BaseRouter","exact","path","component","Login","Signup","Header","Layout","Content","Footer","CustomLayout","changeSelected","position","zIndex","width","theme","mode","defaultSelectedKeys","isAuthenticated","padding","margin","minHeight","children","withRouter","App","onTryAutoSignup","undefined","Boolean","window","location","hostname","updateObject","prevValue","newValue","initialState","action","authFail","authLogout","reducer","composeEnhances","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"uXAIQA,EAASC,IAATD,KAEFE,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,KAAT,OACb,8BACKC,IAAMC,cAAcH,EAAM,CAAEI,MAAO,CAAEC,YAAa,KAClDJ,IAyDMK,EAnDC,SAACC,GAEb,OAEI,6BAEI,kBAAC,IAAD,CACIC,WAAW,WACXC,KAAK,QACLC,WAAY,CACRC,SAAU,SAAAC,GACNC,QAAQC,IAAIF,IAEhBG,SAAU,IAEdC,WAAYT,EAAMU,KAElBC,WAAY,SAAAC,GAAI,OAEZ,yBAAKC,UAAU,gBAAgBhB,MAAO,CAAEiB,aAAc,OAAQC,gBAAiB,YAC3E,kBAAC,IAAKC,KAAN,CACIC,IAAKL,EAAKM,MACVC,QAAS,CACL,kBAAC7B,EAAD,CAAM8B,MAAI,EAACC,QAAM,GACb,kBAAC,EAAD,CAAU5B,KAAM6B,IAAiB5B,KAAK,GAAGuB,IAAI,6BAKrD,kBAAC,IAAKD,KAAKO,KAAX,CACIC,OAAQ,kBAAC,IAAD,CAAQtB,KAAM,GAClBL,MAAO,CAAE4B,MAAO,UAAWV,gBAAiB,cACzCH,EAAKc,UAAY,IAAIC,UAAU,EAAG,IAAM,IAAIC,eAGnDV,MAAON,EAAKc,SAEZG,YAAa,uBAAGC,KAAI,oBAAelB,EAAKmB,GAApB,MAChB,4BAAI,kBAACzC,EAAD,CAAM8B,MAAI,EAACY,KAAK,WAAWpB,EAAKM,WAG3CN,EAAKqB,e,mCClD1BC,GADSC,IAAKnB,KACDoB,IAAbF,UAoFOG,E,kDAjFX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IASVC,kBAAoB,SAACC,GAAW,IAAD,EACHA,EAAMC,OAAtBC,EADmB,EACnBA,KAAMC,EADa,EACbA,MACd,EAAKC,SAAL,eAAiBF,EAAOC,KAZT,EAcnBE,YAAc,WAEVvC,QAAQC,IAAI,EAAKW,QAhBF,EAmBnB4B,YAAc,WAEV,EAAKF,SAAS,CAAEX,QAAS,EAAKK,MAAMS,QAAQd,WArB7B,EAyBnBe,iBAAmB,SAACR,EAAOS,EAAaC,GACpC,IAAMhC,EAAQsB,EAAMC,OAAOU,SAASjC,MAAMyB,MACpCV,EAAUO,EAAMC,OAAOU,SAASlB,QAAQU,MAE9C,OAAQM,GACJ,IAAK,OACD,OAAOG,IAAMC,KAAK,6BAA8B,CAC5CnC,MAAOA,EACPe,QAASA,IAERqB,MAAK,SAAAC,GAAG,OAAIjD,QAAQC,IAAIgD,MAGjC,IAAK,MACD,OAAOH,IAAMI,IAAN,oCAAuCN,EAAvC,KAAqD,CACxDhC,MAAOA,EACPe,QAASA,EACTP,SAAU+B,aAAaC,QAAQ,YAC/BC,UAAWF,aAAaC,QAAQ,WAE/BJ,MAAK,SAAAC,GAAG,OAAIjD,QAAQC,IAAIgD,QA3CrC,EAAKK,MAAQ,CACT1C,MAAOoB,EAAMS,QAAQ7B,MACrBe,QAASK,EAAMS,QAAQd,SAJZ,E,qDAoDT,IAAD,OAEL,OACI,yBAAK4B,OAAWC,KAAKjB,aACjB,kBAAC,IAAD,CAAMkB,gBAAiB,SAACvB,GAAD,OAAW,EAAKQ,iBACnCR,EACA,EAAKF,MAAMW,YACX,EAAKX,MAAMY,aAEX,kBAAC,IAAKlC,KAAN,CAAWgD,MAAM,SACb,kBAAC,IAAD,CAAOtB,KAAK,QAAQC,MAAOmB,KAAKF,MAAM1C,MAClCd,SAAU0D,KAAKvB,qBAEvB,kBAAC,IAAKvB,KAAN,CAAWgD,MAAM,WACb,kBAAC9B,EAAD,CAAU+B,KAAM,EAAGvB,KAAK,UAAUC,MAAOmB,KAAKF,MAAM3B,QAChD7B,SAAU0D,KAAKvB,qBAEvB,kBAAC,IAAKvB,KAAN,KACI,kBAAC,IAAD,CAAQgB,KAAK,UAAUkC,SAAS,UAAhC,IAA2CJ,KAAKxB,MAAM6B,gB,GAvEpDxE,IAAMyE,W,wECkEjBC,MAlEf,SAAoB/B,GAAQ,IAAD,EACcgC,oBAAS,GADvB,mBAChBC,EADgB,KACJC,EADI,OAECF,mBAAS,CAC7BpD,MAAO,GACPe,QAAS,GACTP,SAAU+B,aAAaC,QAAQ,YAC/BC,UAAWF,aAAaC,QAAQ,SAChCe,OAAQC,IAAKC,OAPM,mBAEhBC,EAFgB,KAEVC,EAFU,KAUvB,SAAStC,EAAkBC,GAAQ,IAAD,EACNA,EAAMC,OAAtBC,EADsB,EACtBA,KAAMC,EADgB,EAChBA,MAEdkC,GAAQ,SAAAC,GACJ,OAAO,eAAKA,EAAZ,eAAuBpC,EAAOC,OAqBtC,OACI,6BACI,0BAAM9B,UAAU,eACX0D,GACG,2BACI7B,KAAK,QACLtC,SAAUmC,EACVI,MAAOiC,EAAK1D,MACZ6D,YAAY,UAGpB,8BACIrC,KAAK,UACLsC,QAAS,WACLR,GAAe,IAEnBpE,SAAUmC,EACVI,MAAOiC,EAAK3C,QACZ8C,YAAY,gBACZd,KAAMM,EAAa,EAAI,IAE3B,kBAACU,EAAA,EAAD,CAAMC,GAAIX,GACN,kBAACY,EAAA,EAAD,CAAKH,QAvCrB,SAAoBxC,GAChBY,IAAMC,KAAK,6BAA8B,CACrCnC,MAAO0D,EAAK1D,MACZe,QAAS2C,EAAK3C,QACdP,SAAUkD,EAAKlD,SACfiC,UAAYiB,EAAKjB,UACjBc,OAAQG,EAAKjB,UAAUiB,EAAKH,SAGhCI,EAAQ,CACJ3D,MAAO,GACPe,QAAS,KAEbuC,GAAe,KA2BC,kBAAC,IAAD,WCzDhBlF,EAASC,IAATD,KA+CO8F,E,4MA3CXxB,MAAQ,CACJyB,SAAU,I,kEAGO,IAAD,OAChBjC,IAAMkC,IAAI,8BACLhC,MAAK,SAAAC,GACF,EAAKX,SAAS,CACVyC,SAAU9B,EAAI7C,Y,+BAM1B,OADiB+C,aAAaC,QAAQ,SAiBlC,6BACI,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAShD,KAAMoD,KAAKF,MAAMyB,WAC1B,8BAjBA,yBAAKE,MAAM,qBAAqBC,KAAK,QAAQ3F,MAA6B,CAAE4F,UAAW,WAEnF,kBAAC,IAAD,CACIC,QAAQ,UAER1D,KAAK,UACL2D,UAAQ,IANhB,UAQQ,kBAAC,IAAD,CAAMC,GAAG,WAAT,IAAoB,kBAAC,EAAD,CAAMC,MAAI,EAACzE,MAAI,GAAf,UAR5B,MASI,kBAAC,IAAD,CAAMwE,GAAG,YAAT,IAAqB,kBAAC,EAAD,CAAMxE,MAAI,EAACY,KAAK,WAAhB,WATzB,e,GAlBUrC,IAAMyE,W,2BC0CjB0B,E,4MA5CXlC,MAAQ,CACJb,QAAS,I,EAcbgD,aAAe,SAACvD,GACZ,IAAMU,EAAY,EAAKZ,MAAM0D,MAAMC,OAAO/C,UAC1CE,IAAM8C,OAAN,oCAA0ChD,EAA1C,O,kEAbiB,IAAD,OACVA,EAAYY,KAAKxB,MAAM0D,MAAMC,OAAO/C,UAC1CE,IAAMkC,IAAN,oCAAuCpC,IAClCI,MAAK,SAAAC,GACF,EAAKX,SAAS,CACVG,QAASQ,EAAI7C,Y,+BAazB,OADD+C,aAAa0C,QAAQ,MAAM,KAEtB,6BACI,kBAAC,IAAD,CAAMjF,MAAO4C,KAAKF,MAAMb,QAAQ7B,OAC5B,2BAAI4C,KAAKF,MAAMb,QAAQd,UAE1BwB,aAAaC,QAAQ,WAAaI,KAAKF,MAAMb,QAAQY,WACtD,6BACA,kBAAC,EAAD,CAAaV,YAAY,MACzBC,UAAWY,KAAKxB,MAAM0D,MAAMC,OAAO/C,UACnCH,QAASe,KAAKF,MAAMb,QAEpBoB,QAAQ,WACR,kBAAC,IAAD,CAAMJ,gBAAiBD,KAAKiC,cACxB,kBAAC,IAAD,CAAQ/D,KAAK,SAASkC,SAAS,UAA/B,iB,GArCQvE,IAAMyE,W,oCCFrBgC,EAAY,WACrB,MAAO,CACHpE,KCPkB,eDWbqE,EAAc,SAAAC,GACvB,MAAO,CACHtE,KCZoB,eDapBsE,MAAOA,IAWFC,EAAS,WAKlB,OAJA9C,aAAa+C,WAAW,SACxB/C,aAAa+C,WAAW,kBACxB/C,aAAa+C,WAAW,YACxB/C,aAAa+C,WAAW,SACjB,CACHxE,KC5BmB,gBDkCdyE,EAAmB,SAAAC,GAC5B,OAAO,SAAAC,GACHC,YAAW,WACPD,EAASJ,OACO,IAAjBG,KEhCLG,G,OAAU,kBAACC,EAAA,EAAD,CAAiBjH,MAAO,CAAEkH,SAAU,IAAMC,MAAI,KAGxDC,G,kDAEF,aAAe,IAAD,8BACV,gBASJC,qBAAuB,SAACC,GACpB,EAAKvE,SAAS,CAAEwE,SAAUD,EAAI1E,OAAOE,SAX3B,EAcd0E,qBAAuB,SAACF,GACpB,EAAKvE,SAAS,CAAE0E,SAAUH,EAAI1E,OAAOE,SAf3B,EAkBd4E,aAAe,SAAC/E,GACe,IAAvB,EAAKoB,MAAMwD,UAAyC,IAAvB,EAAKxD,MAAM0D,SACxC,EAAK1E,SAAS,CAAE4E,aAAc,8BAG9B,EAAKlF,MAAMmF,OAAOjF,EAAMC,OAAO2E,SAASzE,MAAOH,EAAMC,OAAO6E,SAAS3E,OACrE,EAAKL,MAAMoF,QAAQC,KAAK,OAtB5B,EAAK/D,MAAQ,CACTwD,SAAU,GACVE,SAAU,GACVE,aAAc,IALR,E,qDAiCV,IAAIA,EAAe,KAQnB,OAPI1D,KAAKxB,MAAMsF,QACXJ,EACI,2BAAI1D,KAAKxB,MAAMsF,MAAMlC,UAOzB,yBAAK7E,UAAY,cACZ,yBAAKA,UAAU,WACZ,sCAEHiD,KAAKF,MAAM4D,cACR,yBAAKjC,MAAM,qBAAqBC,KAAK,SAChC1B,KAAKF,MAAM4D,cAGnBA,EAGG1D,KAAKxB,MAAMuF,QAAU,kBAAC,IAAD,CAAMC,UAAWjB,IAElC,kBAAC,IAAD,CACInE,KAAK,eACL7B,UAAU,aACVkH,cAAe,CACXC,UAAU,GAEdjE,gBAAiBD,KAAKyD,cAGtB,kBAAC,IAAKvG,KAAN,CAEIiH,MAAO,CACH,CACIC,UAAU,EACVxC,QAAS,iCAIjB,kBAAC,IAAD,CACIyC,OAAQ,kBAACC,EAAA,EAAD,CAAcvH,UAAU,wBAA0BkE,YAAY,WACtErC,KAAK,WACLtC,SAAU0D,KAAKoD,wBAIvB,kBAAC,IAAKlG,KAAN,CAEIiH,MAAO,CACH,CACIC,UAAU,EACVxC,QAAS,iCAIjB,kBAAC,IAAD,CACIyC,OAAQ,kBAACE,EAAA,EAAD,CAAcxH,UAAU,wBAChCmB,KAAK,WACL+C,YAAY,WACZrC,KAAK,WACLtC,SAAU0D,KAAKuD,wBAKvB,kBAAC,IAAKrG,KAAN,KACI,kBAAC,IAAD,CAAQgB,KAAK,UAAUkC,SAAS,SAASrD,UAAU,qBAAnD,UAGA,kBAAC,IAAD,CAAS+E,GAAG,WAAW/F,MAAO,CAAEyI,WAAY,SAA5C,wB,GA3GF3I,IAAMyE,WAqIrBmE,gBAfU,SAAC3E,GACtB,MAAO,CACHiE,QAASjE,EAAMiE,QACfD,MAAOhE,EAAMgE,UAII,SAAAjB,GACrB,MAAO,CACHc,OAAQ,SAACL,EAAUE,GAAX,OAAwBX,EF9Ff,SAACS,EAAUE,GAChC,OAAO,SAAAX,GACHA,EAASP,GACThD,IAAMC,KAAK,yCAA0C,CACjD+D,SAAUA,EACVE,SAAUA,IAEThE,MAAK,SAAAC,GACF,IAAM+C,EAAQ/C,EAAI7C,KAAKO,IACjBuH,EAAiB,IAAIC,MAAK,IAAIA,MAAOC,UAAY,MACvDjF,aAAa0C,QAAQ,QAASG,GAC9B7C,aAAa0C,QAAQ,WAAYiB,GACjC3D,aAAa0C,QAAQ,iBAAkBqC,GACvC7B,EAASN,EAAYC,IACrBK,EAASF,EAAiB,WEgFOtF,CAAkBiG,EAAUE,QAM9DiB,CAA4CtB,I,UCtIrD0B,G,kDAGF,aAAe,IAAD,8BACV,gBAUJzB,qBAAuB,SAACC,GACpB,EAAKvE,SAAS,CAAEwE,SAAUD,EAAI1E,OAAOE,SAZ3B,EAcdiG,kBAAoB,SAACzB,GACjB,EAAKvE,SAAS,CAAEiG,MAAO1B,EAAI1E,OAAOE,SAfxB,EAkBdmG,sBAAwB,SAAC3B,GACrB,EAAKvE,SAAS,CAAEmG,UAAW5B,EAAI1E,OAAOE,SAnB5B,EAsBdqG,sBAAwB,SAAC7B,GACrB,EAAKvE,SAAS,CAAEqG,UAAW9B,EAAI1E,OAAOE,SAvB5B,EA6Bd4E,aAAe,SAAC/E,GAGe,IAAvB,EAAKoB,MAAMwD,UAAsC,IAApB,EAAKxD,MAAMiF,OAAuC,IAAxB,EAAKjF,MAAMqF,WACvC,IAAxB,EAAKrF,MAAMmF,WAAmB,EAAKnF,MAAMmF,YAAc,EAAKnF,MAAMqF,UACrE,EAAKrG,SAAS,CAAE4E,aAAc,8BAI9B,EAAKlF,MAAMmF,OACPjF,EAAMC,OAAO2E,SAASzE,MACtBH,EAAMC,OAAOoG,MAAMlG,MACnBH,EAAMC,OAAOsG,UAAUpG,MACvBH,EAAMC,OAAOwG,UAAUtG,OAI3BrC,QAAQC,IAAIiC,EAAMC,OAAO2E,SAASzE,MAAOH,EAAMC,OAAOoG,MAAMlG,MAAOH,EAAMC,OAAOsG,UAAUpG,MAAOH,EAAMC,OAAOwG,UAAUtG,OACxH,EAAKL,MAAMoF,QAAQC,KAAK,OA7C5B,EAAK/D,MAAQ,CACTwD,SAAU,GACVyB,MAAO,GACPE,UAAW,GACXE,UAAW,GACXzB,aAAc,IAPR,E,qDAyDV,OACI,yBAAK3G,UAAU,cACX,yBAAKA,UAAU,WACX,iDAEHiD,KAAKF,MAAM4D,cACR,yBAAK3H,MAAS,CAACiB,aAAc,SACzB,kBAAC,IAAD,CACI4E,QAAQ,QACR7D,YAAaiC,KAAKF,MAAM4D,aACxBxF,KAAK,QACL2D,UAAQ,KAKpB,kBAAC,IAAD,CAAM5B,gBAAiBD,KAAKyD,cAExB,kBAAC,IAAKvG,KAAN,CAEIiH,MAAO,CACH,CACIC,UAAU,EACVxC,QAAS,8BACTwD,YAAY,KAKpB,kBAAC,IAAD,CACIf,OAAQ,kBAACC,EAAA,EAAD,CAAcvH,UAAU,wBAA0BkE,YAAY,WACtErC,KAAK,WACLtC,SAAU0D,KAAKoD,qBACfvE,MAAOmB,KAAKF,MAAMwD,YAM1B,kBAAC,IAAKpG,KAAN,CAEIiH,MAAO,CACH,CACIjG,KAAM,QAAS0D,QAAS,kCAE5B,CACIwC,UAAU,EAAMxC,QAAS,4BACzBwD,YAAY,KAKpB,kBAAC,IAAD,CAAOf,OAAQ,kBAACgB,GAAA,EAAD,CAActI,UAAU,wBAA0BkE,YAAY,QAAQrC,KAAK,QACtFtC,SAAU0D,KAAK8E,kBACfjG,MAAOmB,KAAKF,MAAMiF,MAClBO,QAAQ,wDACRlI,MAAM,oBAMd,kBAAC,IAAKF,KAAN,CACI0B,KAAK,WAELuF,MAAO,CACH,CACIC,UAAU,EACVxC,QAAS,wBACT2D,IAAK,IAMbC,aAAW,GAEX,kBAAC,IAAMC,SAAP,CACIpB,OAAQ,kBAACE,EAAA,EAAD,CAAcxH,UAAU,wBAChCmB,KAAK,WACL+C,YAAY,WACZrC,KAAK,YACLtC,SAAU0D,KAAKgF,sBACfnG,MAAOmB,KAAKF,MAAMmF,UAClBK,QAAQ,yDAERlI,MAAM,kDAKd,kBAAC,IAAKF,KAAN,CACI0B,KAAK,UAEL8G,aAAc,CAAC,YACfF,aAAW,EACXrB,MAAO,CACH,CACIC,UAAU,EACVxC,QAAS,gCACTwD,YAAY,GAEhB,gBAAGO,EAAH,EAAGA,cAAH,MAAwB,CACpBC,UADoB,SACVC,EAAMhH,GACZ,OAAKA,GAAS8G,EAAc,cAAgB9G,EAIrCiH,QAAQC,OAAO,oDAHXD,QAAQE,eAQ/B,kBAAC,IAAMP,SAAP,CACIpB,OAAQ,kBAACE,EAAA,EAAD,CAAcxH,UAAU,wBAChCmB,KAAK,WACL+C,YAAY,mBACZrC,KAAK,YACLtC,SAAU0D,KAAKkF,sBACfrG,MAAOmB,KAAKF,MAAMqF,aAI1B,kBAAC,IAAKjI,KAAN,KACI,kBAAC,IAAD,CAAQgB,KAAK,UAAUkC,SAAS,SAASrE,MAAO,CAAEC,YAAa,SAA/D,UADJ,KAKA,kBAAC,IAAD,CACQD,MAAO,CAAEC,YAAa,QACtB8F,GAAG,WAFX,iB,GA5LWjG,IAAMyE,WAyNtBmE,gBAfU,SAAC3E,GACtB,MAAO,CACHiE,QAASjE,EAAMiE,QACfD,MAAOhE,EAAMgE,UAII,SAAAjB,GACrB,MAAO,CACHc,OAAQ,SAACL,EAAUyB,EAAOE,EAAWE,GAA7B,OAA2CtC,EH7JjC,SAACS,EAAUyB,EAAOE,EAAWE,GACnD,OAAO,SAAAtC,GACHA,EAASP,GACThD,IAAMC,KAAK,gDAAiD,CACxD+D,SAAUA,EACVyB,MAAOA,EACPE,UAAWA,EACXE,UAAWA,IAEV3F,MAAK,SAAAC,GACF,IAAM+C,EAAQ/C,EAAI7C,KAAKO,IACjBuH,EAAiB,IAAIC,MAAK,IAAIA,MAAOC,UAAY,MACvDjF,aAAa0C,QAAQ,QAASG,GAC9B7C,aAAa0C,QAAQ,WAAYiB,GACjC3D,aAAa0C,QAAQ,iBAAkBqC,GACvC7B,EAASN,EAAYC,IACrBK,EAASF,EAAiB,OAC1BrD,IAAMC,KAAK,8BAA+B,CACtC+D,SAAUA,EACVyB,MAAOA,EACPvB,SAAUyB,EACVzC,MAAO7C,aAAaC,QAAQ,eGwIoBvC,CAAmBiG,EAAUyB,EAAOE,EAAWE,QAMpGV,CAA4CI,IC9F5CoB,OAlIf,SAAqBzH,GAEjB,OACI,6BACI,yBAAKiD,MAAM,2BACP,yBAAKA,MAAM,OAEP,yBAAKA,MAAM,qBAAqB1F,MAAO,IACnC,yBAAK0F,MAAM,0DACP,yBAAKA,MAAM,QACP,yBAAKA,MAAM,8DACP,kBAAC,IAAD,CAAQrF,KAAM,IACVL,MAAO,CAAE4B,MAAO,UAAWV,gBAAiB,YAC5C,uBAAGlB,MAAO,CAAEkH,SAAU,WACdzE,EAAM0H,KAAK5C,UAAY,IAAIzF,UAAU,EAAE,IAAM,IAAIC,iBAKjE,yBAAK2D,MAAM,kEACP,4BAAQxD,GAAG,cAAckI,cAAY,QAAQC,cAAY,IAAI3E,MAAM,oCAAnE,qBAMZ,yBAAKA,MAAM,gEACP,yBAAKA,MAAM,gCAAgC1F,MAAO,CAAEyI,WAAY,SAE5D,yBAAK/C,MAAM,aACP,yBAAKA,MAAM,OACP,yBAAKA,MAAM,YACP,wBAAIA,MAAM,eAAeC,KAAK,WAC1B,wBAAID,MAAM,YACN,uBAAGA,MAAM,kBAAkBzD,KAAK,WAAW0D,KAAK,MAAMyE,cAAY,OAAM,uBAAG1E,MAAM,uBAAjF,6BAEJ,wBAAIA,MAAM,YACN,uBAAGA,MAAM,WAAWzD,KAAK,QAAQ0D,KAAK,MAAMyE,cAAY,OAAM,uBAAG1E,MAAM,uBAAvE,4BAKR,yBAAKA,MAAM,eACP,yBAAKC,KAAK,WAAWD,MAAM,4BAA4BxD,GAAG,WACtD,yBAAKwD,MAAM,OACP,yBAAKA,MAAM,YACP,4CAEJ,yBAAKA,MAAM,YACP,2BAAIjD,EAAM0H,KAAK5C,YAGvB,yBAAK7B,MAAM,OACP,yBAAKA,MAAM,YACP,yCAEJ,yBAAKA,MAAM,YACP,2BAAIjD,EAAM0H,KAAKnB,SAIvB,yBAAKtD,MAAM,OACP,yBAAKA,MAAM,YACP,4CAEJ,yBAAKA,MAAM,YACP,2BAAIjD,EAAM0H,KAAK1D,UAI3B,yBAAKd,KAAK,WAAWD,MAAM,gBAAgBxD,GAAG,QAC1C,yBAAKwD,MAAM,OACP,yBAAKA,MAAM,YACP,8CAEJ,yBAAKA,MAAM,YACP,2BAAIjD,EAAM6H,uBAiB1D,yBAAK5E,MAAM,aAAaxD,GAAG,UAAUqI,SAAS,KAAK5E,KAAK,SAAS6E,kBAAgB,oBAAoBC,cAAY,QAC7G,yBAAK/E,MAAM,eAAeC,KAAK,YAC3B,yBAAKD,MAAM,iBACP,yBAAKA,MAAM,gBACP,wBAAIA,MAAM,cAAcxD,GAAG,WAA3B,eACA,4BAAQC,KAAK,SAASuD,MAAM,QAAQgF,eAAa,QAAQC,aAAW,SAChE,0BAAMF,cAAY,QAAlB,UAGR,yBAAK/E,MAAM,cACP,yBAAKA,MAAM,cACP,uBAAGkF,IAAI,OAAP,oKAEJ,yBAAKlF,MAAM,cACP,2BAAOkF,IAAI,eAAX,mBACA,2BAAOzI,KAAK,OAAOD,GAAG,cAAcwD,MAAM,kBAE9C,yBAAKA,MAAM,cACP,2BAAOkF,IAAI,YAAX,SACA,2BAAOzI,KAAK,OAAOD,GAAG,WAAWwD,MAAM,kBAE3C,yBAAKA,MAAM,cACP,2BAAOkF,IAAI,YAAX,eACA,2BAAOzI,KAAK,OAAOD,GAAG,WAAWwD,MAAM,mBAG/C,yBAAKA,MAAM,gBACP,4BAAQvD,KAAK,SAASuD,MAAM,oBAAoBgF,eAAa,SAA7D,YACA,4BAAQvI,KAAK,SAASuD,MAAM,kBAAkBgF,eAAa,SAA3D,iBCrEbG,G,4MA3CX9G,MAAQ,CACJyB,SAAU,GACVsF,SAAU,I,kEAKO,IAAD,OACVrE,EAAQ7C,aAAaC,QAAQ,SACnCN,IAAMkC,IAAN,0CAA6CgB,EAA7C,MACKhD,MAAK,SAAAC,GACF,EAAKX,SAAS,CACVyC,SAAU9B,EAAI7C,OAElBJ,QAAQC,IAAI,UAAW,EAAKqD,MAAMyB,aAG1CjC,IAAMkC,IAAN,+CAAkDgB,EAAlD,MACKhD,MAAK,SAAAsH,GACF,EAAKhI,SAAS,CACV+H,SAAUC,EAAOlK,KAAK,KAE1BJ,QAAQC,IAAI,OAAO,EAAKqD,MAAM+G,e,+BAOtC,OACI,6BACI,kBAAC,GAAD,CAAaX,KAAMlG,KAAKF,MAAM+G,SAAUR,UAAYrG,KAAKF,MAAMyB,SAASwF,SACxE,yBAAKhL,MAAO,CAAEiL,UAAW,SACzB,kBAAC,EAAD,CAASpK,KAAMoD,KAAKF,MAAMyB,iB,GAnCpB1F,IAAMyE,WCSb2G,GAVI,kBACf,6BACI,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAW9F,IACjC,kBAAC,IAAD,CAAO4F,OAAK,EAACC,KAAK,wBAAwBC,UAAWpF,IACrD,kBAAC,IAAD,CAAOkF,OAAK,EAACC,KAAK,UAAUC,UAAWC,KACvC,kBAAC,IAAD,CAAOH,OAAK,EAACC,KAAK,WAAWC,UAAWE,KACxC,kBAAC,IAAD,CAAOJ,OAAK,EAACC,KAAK,YAAYC,UAAWR,O,uCCRzCW,GAA4BC,KAA5BD,OAAQE,GAAoBD,KAApBC,QAASC,GAAWF,KAAXE,OACnBC,G,4MAEFC,eAAiB,SAACzK,GACdwC,aAAa0C,QAAQ,MAAOlF,GAC5BX,QAAQC,IAAIkD,aAAaC,QAAQ,S,uDAE3B,IAAD,OAEL,OACI,kBAAC,KAAD,KACI,kBAAC2H,GAAD,CAAQxL,MAAO,CAAE8L,SAAU,QAASC,OAAQ,EAAGC,MAAO,SAClD,yBAAKhL,UAAU,QAAf,SACA,kBAAC,KAAD,CAAMiL,MAAM,OAAOC,KAAK,aACpBC,oBAAqB,CAACvI,aAAaC,QAAQ,SAC3C,kBAAC,KAAK1C,KAAN,CAAWC,IAAI,IAAI+D,QAAS,kBAAM,EAAK0G,eAAe,OAClD,kBAAC,IAAD,CAAM9F,GAAG,KAAT,WAIA9B,KAAKxB,MAAM2J,gBAEP,kBAAC,KAAKjL,KAAN,CAAWC,IAAI,IAAI+D,QAASlB,KAAKxB,MAAMiE,QACnC,kBAAC,IAAD,CAAMX,GAAG,IAAIZ,QAAS,kBAAM,EAAK0G,eAAe,OAAhD,WAIJ,kBAAC,KAAK1K,KAAN,CAAWC,IAAI,IAAI+D,QAAS,kBAAM,EAAK0G,eAAe,OAClD,kBAAC,IAAD,CAAM9F,GAAG,WAAT,UAKR9B,KAAKxB,MAAM2J,gBACP,kBAAC,KAAKjL,KAAN,CAAWC,IAAI,IAAI+D,QAAS,kBAAM,EAAK0G,eAAe,OAClD,kBAAC,IAAD,CAAM9F,GAAG,aAAY,kBAACwC,EAAA,EAAD,MAAiB3E,aAAaC,QAAQ,cAI/D,kBAAC,KAAK1C,KAAN,CAAWC,IAAI,QAU/B,kBAACsK,GAAD,CAAS1K,UAAU,cAAchB,MAAO,CAAEqM,QAAS,SAAUpB,UAAW,KACpE,kBAAC,KAAD,CAAYjL,MAAO,CAAEsM,OAAQ,WACzB,kBAAC,KAAWnL,KAAZ,KAAiB,kBAAC,IAAD,CAAM4E,GAAG,KAAT,SACjB,kBAAC,KAAW5E,KAAZ,KAAiB,kBAAC,IAAD,CAAM4E,GAAG,KAAT,UAIrB,yBAAK/E,UAAU,yBAAyBhB,MAAO,CAAEqM,QAAS,GAAIE,UAAW,MACpEtI,KAAKxB,MAAM+J,WAKpB,kBAACb,GAAD,CAAQ3L,MAAO,CAAE4F,UAAW,WAA5B,oD,GA7DW9F,IAAMyE,WA0ElBkI,eAAW/D,YAAQ,MAPP,SAAA5B,GACvB,MAAO,CACHJ,OAAQ,kBACJI,EAASxF,SAIKoH,CAAkCkD,KCzEtDc,G,kLAGFzI,KAAKxB,MAAMkK,oB,+BAMX,OACE,6BACE,kBAAC,IAAD,KACE,kBAAC,GAAiB1I,KAAKxB,MACrB,kBAAC,GAAD,a,GAbM8B,aAkCHmE,gBAZS,SAAA3E,GACtB,MAAO,CACLqI,gBAAiC,OAAhBrI,EAAM0C,UAIA,SAAAK,GACzB,MAAO,CACL6F,gBAAiB,kBAAM7F,GR0DhB,SAAAA,GACH,IAAML,EAAQ7C,aAAaC,QAAQ,SACnC,QAAc+I,IAAVnG,EACAK,EAASJ,SACN,CACH,IAAMiC,EAAiB,IAAIC,KAAKhF,aAAaC,QAAQ,mBACjD8E,GAAkB,IAAIC,KACtB9B,EAASJ,MAETI,EAASN,EAAYC,IACrBK,EAASF,GAAkB+B,EAAeE,WAAY,IAAID,MAAOC,WAAa,eQhE/EH,CAA6CgE,IChCxCG,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAS7G,MACvB,2DClBC,IAAM8G,GAAc,SAACC,EAAWC,GACnC,sBACOD,EADP,GAEOC,ICALC,GAAe,CACjB3G,MAAO,KACPsB,MAAO,KACPC,SAAS,GAIPzB,GAAY,SAACxC,EAAOsJ,GACtB,OAAOJ,GAAalJ,EAAO,CACvBgE,MAAO,KACPC,SAAS,KAIXxB,GAAc,SAACzC,EAAOsJ,GACxB,OAAOJ,GAAalJ,EAAO,CACvB0C,MAAO4G,EAAO5G,MACduB,SAAS,EACTD,MAAO,QAITuF,GAAW,SAACvJ,EAAOsJ,GACrB,OAAOJ,GAAalJ,EAAO,CACvBgE,MAAOsF,EAAOtF,MACdC,SAAS,KAGXuF,GAAa,SAACxJ,EAAOsJ,GACvB,OAAOJ,GAAalJ,EAAO,CACvB0C,MAAO,QAgBA+G,GAZC,WAAmC,IAAlCzJ,EAAiC,uDAAzBqJ,GAAcC,EAAW,uCAC9C,OAAQA,EAAOlL,MACX,IVvCkB,aUuCW,OAAOoE,GAAUxC,GAC9C,IVvCoB,eUuCW,OAAOyC,GAAYzC,EAAOsJ,GACzD,IVvCiB,YUuCW,OAAOC,GAASvJ,EAAOsJ,GACnD,IVvCmB,cUuCW,OAAOE,GAAWxJ,GAChD,QACI,OAAOA,I,mBC9Bb0J,GAAkBX,OAAOY,sCAAwCC,KAEjEC,GAAQC,aAAYL,GAASC,GACjCK,aAAgBC,QAIZC,GACJ,kBAAC,IAAD,CAAUJ,MAAOA,IACf,kBAAC,GAAD,OAIJK,IAASC,OAAOF,GAAKG,SAASC,eAAe,SHwGvC,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB9K,MAAK,SAAA+K,GACJA,EAAaC,gBAEdC,OAAM,SAAA3G,GACLtH,QAAQsH,MAAMA,EAAMlC,c","file":"static/js/main.4ade7199.chunk.js","sourcesContent":["import React from 'react'\n\nimport { List, Avatar, Typography } from 'antd';\nimport { MessageOutlined, LikeOutlined, StarOutlined, CommentOutlined } from '@ant-design/icons';\nconst { Text } = Typography;\n\nconst IconText = ({ icon, text }) => (\n    <span>\n        {React.createElement(icon, { style: { marginRight: 8 } })}\n        {text}\n    </span>\n);\n\n\n\nconst Article = (prpos) => {\n\n    return (\n\n        <div>\n\n            <List\n                itemLayout=\"vertical\"\n                size=\"large\"\n                pagination={{\n                    onChange: page => {\n                        console.log(page);\n                    },\n                    pageSize: 10,\n                }}\n                dataSource={prpos.data}\n\n                renderItem={item => (\n\n                    <div className=\"card post-div\" style={{ marginBottom: \"10px\", backgroundColor: \"#E9F7EF\" }}>\n                        <List.Item\n                            key={item.title}\n                            actions={[\n                                <Text code strong>\n                                    <IconText icon={CommentOutlined} text=\"\" key=\"list-vertical-message\" />\n                                </Text>\n\n                            ]}\n                        >\n                            <List.Item.Meta\n                                avatar={<Avatar size={28}\n                                    style={{ color: '#f56a00', backgroundColor: '#fde3cf' }}>\n                                    {((item.userName || \"\").substring(0, 2) || \"\").toUpperCase()}\n                                </Avatar>}\n\n                                title={item.userName}\n\n                                description={<a href={`/articles/${item.id}/`}>\n                                    <h4><Text code type=\"warning\">{item.title}</Text></h4>\n                                </a>}\n                            />\n                            {item.content}\n                        </List.Item>\n                    </div>\n                )}\n            />\n        </div>\n    );\n\n}\n\nexport default Article;","import React, { useState } from 'react';\nimport axios from 'axios'\nimport { Form, Input, Button } from 'antd';\n\n\nconst FormItem = Form.Item;\nconst { TextArea } = Input;\n\nclass ArticleForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            title: props.article.title,\n            content: props.article.content\n        };\n        \n\n    }\n    \n    handleInputChange = (event) => {\n        const { name, value } = event.target;\n        this.setState({ [name]: value });\n    }\n    initialize1 = () => {\n        \n        console.log(this.title)\n       \n    }\n    initialize2 = () => {\n       \n        this.setState({ content: this.props.article.content });\n    }\n\n\n    handleFormSubmit = (event, requestType, articleID) => {\n        const title = event.target.elements.title.value;\n        const content = event.target.elements.content.value;\n\n        switch (requestType) {\n            case 'post':\n                return axios.post('http://127.0.0.1:8000/api/', {\n                    title: title,\n                    content: content\n                })\n                    .then(res => console.log(res))\n\n\n            case 'put':\n                return axios.put(`http://127.0.0.1:8000/api/${articleID}/`, {\n                    title: title,\n                    content: content,\n                    userName :localStorage.getItem('username'),\n                    userToken :localStorage.getItem('token')\n                })\n                    .then(res => console.log(res));\n                    \n                    \n        }\n\n\n    }\n    render() {\n      \n        return (\n            <div onLoad = { this.initialize1}>\n                <Form onSubmitCapture={(event) => this.handleFormSubmit(\n                    event,\n                    this.props.requestType,\n                    this.props.articleID\n                )}>\n                    <Form.Item label=\"Title\">\n                        <Input name=\"title\" value={this.state.title}\n                            onChange={this.handleInputChange} />\n                    </Form.Item>\n                    <Form.Item label=\"Content\">\n                        <TextArea rows={4} name=\"content\" value={this.state.content}\n                            onChange={this.handleInputChange} />\n                    </Form.Item>\n                    <Form.Item >\n                        <Button type=\"primary\" htmlType=\"submit\"> {this.props.btnText}\n                        </Button>\n                    </Form.Item>\n                </Form>\n            </div>\n        );\n\n    }\n\n}\n\nexport default ArticleForm;","import React, { useState } from \"react\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Fab from \"@material-ui/core/Fab\";\nimport Zoom from \"@material-ui/core/Zoom\";\nimport axios from 'axios'\nimport uuid from \"uuid\";\n\n\nfunction CreateArea(props) {\n    const [isExpanded, changeExpanded] = useState(false);\n    const [note, setNote] = useState({\n        title: \"\",\n        content: \"\",\n        userName :localStorage.getItem('username'),\n        userToken :localStorage.getItem('token'),\n        postID: uuid.v4()\n    });\n\n    function handleInputChange(event) {\n        const { name, value } = event.target;\n\n        setNote(prevNote => {\n            return { ...prevNote, [name]: value };\n        });\n    }\n\n    function submitNote(event) {\n        axios.post('http://127.0.0.1:8000/api/', {\n            title: note.title,\n            content: note.content,\n            userName: note.userName,\n            userToken : note.userToken,\n            postID :note.userToken+note.postID\n        })\n\n        setNote({\n            title: \"\",\n            content: \"\"\n        });\n        changeExpanded(false);\n        \n    }\n\n    return (\n        <div>\n            <form className=\"create-note\">\n                {isExpanded && (\n                    <input\n                        name=\"title\"\n                        onChange={handleInputChange}\n                        value={note.title}\n                        placeholder=\"Title\"\n                    />\n                )}\n                <textarea\n                    name=\"content\"\n                    onClick={() => {\n                        changeExpanded(true);\n                    }}\n                    onChange={handleInputChange}\n                    value={note.content}\n                    placeholder=\"Write post...\"\n                    rows={isExpanded ? 3 : 1}\n                />\n                <Zoom in={isExpanded}>\n                    <Fab onClick={submitNote}>\n                        <AddIcon />\n                    </Fab>\n                </Zoom>\n            </form>\n        </div>\n    );\n}\n\nexport default CreateArea;\n","import React from 'react'\nimport axios from 'axios'\nimport { Form, Input, Button, Alert , Typography} from 'antd';\nimport { Link, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux'\nimport Article from \"../components/Article\"\nimport ArticleForm from \"../components/ArticleForm\"\nimport CreateArea from \"../components/CreateArea\"\n\nconst { Text } = Typography;\n\nclass ArticleList extends React.Component {\n\n    state = {\n        articles: []\n    }\n\n    componentDidMount() {\n        axios.get('http://127.0.0.1:8000/api/')\n            .then(res => {\n                this.setState({\n                    articles: res.data\n                });\n            })\n    }\n    render() {\n        let isLoggedin = localStorage.getItem('token')\n        if (!isLoggedin) {\n            return (\n                <div class=\"alert alert-danger\" role=\"alert\" style={{ fontSize: \"2rem\" }, { textAlign: \"center\" }}>\n\n                    <Alert\n                        message=\"Warning\"\n\n                        type=\"warning\"\n                        showIcon\n                    />\n                 Please <Link to=\"/login/\"> <Text mark code>Login</Text></Link> or\n                    <Link to=\"/signup/\"> <Text code type=\"warning\">Signup</Text></Link> first!\n                </div>\n            );\n        }\n        return (\n            <div>\n                <CreateArea />\n                <Article data={this.state.articles} />\n                <br />\n                {/* <h2> Create an Article</h2>\n                <ArticleForm requestType=\"post\" articleID={null} btnText=\"Create\" /> */}\n            </div>\n\n        )\n    }\n}\n\n\nexport default ArticleList;","import React from 'react'\nimport axios from 'axios'\nimport { Card, Button } from 'antd'\nimport ArticleForm from \"../components/ArticleForm\"\nimport Form from 'antd/lib/form/Form'\n\n\nclass ArticleDetail extends React.Component {\n\n    state = {\n        article: []\n    }\n\n    componentDidMount() {\n        const articleID = this.props.match.params.articleID;\n        axios.get(`http://127.0.0.1:8000/api/${articleID}`)\n            .then(res => {\n                this.setState({\n                    article: res.data\n\n                });\n            })\n    }\n\n    handleDelete = (event) => {\n        const articleID = this.props.match.params.articleID;\n        axios.delete(`http://127.0.0.1:8000/api/${articleID}/`)\n       \n    }\n    render() {\n       localStorage.setItem('key','1')\n        return (\n            <div>\n                <Card title={this.state.article.title}>\n                    <p>{this.state.article.content}</p>\n                </Card>\n                {localStorage.getItem('token')===  this.state.article.userToken &&\n                <div>\n                <ArticleForm requestType=\"put\" \n                articleID={this.props.match.params.articleID} \n                article={this.state.article} \n            \n                btnText=\"Update\" />\n                <Form onSubmitCapture={this.handleDelete}>\n                    <Button type=\"danger\" htmlType=\"submit\">Delete</Button>\n                </Form>\n                </div>\n                }\n            </div>\n        )\n    }\n}\n\nexport default ArticleDetail;","import axios from 'axios';\nimport * as actionTypes from './actionType';\nimport { useState } from 'react';\n\n\nexport const authStart = () => {\n    return {\n        type: actionTypes.AUTH_START\n    }\n}\n\nexport const authSuccess = token => {\n    return {\n        type: actionTypes.AUTH_SUCCESS,\n        token: token\n    }\n}\n\nexport const authFail = error => {\n    return {\n        type: actionTypes.AUTH_FAIL,\n        error: error\n    }\n}\n\nexport const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('expirationDate');\n    localStorage.removeItem('username');\n    localStorage.removeItem('email');\n    return {\n        type: actionTypes.AUTH_LOGOUT,\n\n    };\n}\n\n\nexport const checkAuthTimeout = expirationTime => {\n    return dispatch => {\n        setTimeout(() => {\n            dispatch(logout());\n        }, expirationTime * 1000)\n    }\n}\n\nexport const authLogin = (username, password) => {\n    return dispatch => {\n        dispatch(authStart);\n        axios.post('http://127.0.0.1:8000/rest-auth/login/', {\n            username: username,\n            password: password\n        })\n            .then(res => {\n                const token = res.data.key;\n                const expirationDate = new Date(new Date().getTime() + 3600 * 10000);\n                localStorage.setItem('token', token);\n                localStorage.setItem('username', username);\n                localStorage.setItem('expirationDate', expirationDate);\n                dispatch(authSuccess(token));\n                dispatch(checkAuthTimeout(3600));\n\n            })\n    }\n}\n\nexport const authSignup = (username, email, password1, password2) => {\n    return dispatch => {\n        dispatch(authStart);\n        axios.post('http://127.0.0.1:8000/rest-auth/registration/', {\n            username: username,\n            email: email,\n            password1: password1,\n            password2: password2\n        })\n            .then(res => {\n                const token = res.data.key;\n                const expirationDate = new Date(new Date().getTime() + 3600 * 10000);\n                localStorage.setItem('token', token);\n                localStorage.setItem('username', username);\n                localStorage.setItem('expirationDate', expirationDate);\n                dispatch(authSuccess(token));\n                dispatch(checkAuthTimeout(3600));\n                axios.post('http://127.0.0.1:8000/user/', {\n                    username: username,\n                    email: email,\n                    password: password1,\n                    token: localStorage.getItem('token')\n                })\n\n            })\n\n\n\n    }\n\n}\n\nexport const authCheckState = () => {\n    return dispatch => {\n        const token = localStorage.getItem('token');\n        if (token === undefined) {\n            dispatch(logout());\n        } else {\n            const expirationDate = new Date(localStorage.getItem('expirationDate'));\n            if (expirationDate <= new Date()) {\n                dispatch(logout());\n            } else {\n                dispatch(authSuccess(token));\n                dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime()) / 1000));\n            }\n        }\n    }\n}","export const AUTH_START = 'AUTH_START';\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\nexport const AUTH_FAIL = 'AUTH_FAIL';\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { Form, Input, Button, Spin } from 'antd';\nimport { UserOutlined, LockOutlined, LoadingOutlined } from '@ant-design/icons';\nimport { NavLink } from 'react-router-dom';\nimport * as actions from '../store/actions/auth'\nimport '../custom.css';\n\n\nconst antIcon = <LoadingOutlined style={{ fontSize: 24 }} spin />;\n\n\nclass NormalLoginForm extends React.Component {\n\n    constructor() {\n        super();\n        this.state = {\n            username: '',\n            password: '',\n            errorMessage: ''\n        };\n\n    }\n\n    handleUsernameChange = (evt) => {\n        this.setState({ username: evt.target.value });\n    }\n\n    handlePasswordChange = (evt) => {\n        this.setState({ password: evt.target.value });\n    }\n\n    handleSubmit = (event) => {\n        if (this.state.username == \"\" || this.state.password == \"\") {\n            this.setState({ errorMessage: \"Please fillup all field!\" });\n        }\n        else {\n            this.props.onAuth(event.target.username.value, event.target.password.value)\n            this.props.history.push('/')\n        }\n\n\n    }\n\n\n    render() {\n\n        let errorMessage = null;\n        if (this.props.error) {\n            errorMessage = (\n                <p>{this.props.error.message}</p>\n            );\n        }\n\n\n        return (\n\n            <div className = \"signup-div\">\n                 <div className=\"heading\">\n                    <h1>Login</h1>\n                </div>\n                {this.state.errorMessage &&\n                    <div class=\"alert alert-danger\" role=\"alert\">\n                        {this.state.errorMessage}\n                    </div>\n                }\n                {errorMessage}\n                {\n\n                    this.props.loading ? <Spin indicator={antIcon} /> :\n\n                        <Form\n                            name=\"normal_login\"\n                            className=\"login-form\"\n                            initialValues={{\n                                remember: true,\n                            }}\n                            onSubmitCapture={this.handleSubmit}\n\n                        >\n                            <Form.Item\n\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: 'Please input your Username!',\n                                    },\n                                ]}\n                            >\n                                <Input\n                                    prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"Username\"\n                                    name=\"username\"\n                                    onChange={this.handleUsernameChange}\n\n                                />\n                            </Form.Item>\n                            <Form.Item\n\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: 'Please input your Password!',\n                                    },\n                                ]}\n                            >\n                                <Input\n                                    prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                                    type=\"password\"\n                                    placeholder=\"Password\"\n                                    name=\"password\"\n                                    onChange={this.handlePasswordChange}\n                                />\n                            </Form.Item>\n\n\n                            <Form.Item>\n                                <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n                                    Log in\n                                </Button>\n                                <NavLink to=\"/signup/\" style={{ marginLeft: '10px' }}>\n                                    Register now!</NavLink>\n                            </Form.Item>\n                        </Form>\n                }\n            </div>\n        );\n    }\n\n};\n\nconst mapsStateToProps = (state) => {\n    return {\n        loading: state.loading,\n        error: state.error\n    }\n}\n\nconst mapDispatchProps = dispatch => {\n    return {\n        onAuth: (username, password) => dispatch(actions.authLogin(username, password))\n    }\n}\n\n\n\nexport default connect(mapsStateToProps, mapDispatchProps)(NormalLoginForm);","import React from 'react';\nimport { Form, Input, Button, Alert } from 'antd';\nimport Icon from '@ant-design/icons';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport * as actions from '../store/actions/auth';\nimport { UserOutlined, LockOutlined, MailOutlined } from '@ant-design/icons';\nimport '../custom.css';\n\n\n\nclass RegistrationForm extends React.Component {\n\n\n    constructor() {\n        super();\n        this.state = {\n            username: '',\n            email: '',\n            password1: '',\n            password2: '',\n            errorMessage: ''\n        };\n\n    }\n    handleUsernameChange = (evt) => {\n        this.setState({ username: evt.target.value });\n    }\n    handleEmailChange = (evt) => {\n        this.setState({ email: evt.target.value });\n    }\n\n    handlePassword1Change = (evt) => {\n        this.setState({ password1: evt.target.value });\n    }\n\n    handlePassword2Change = (evt) => {\n        this.setState({ password2: evt.target.value });\n    }\n\n\n\n\n    handleSubmit = (event) => {\n\n\n        if (this.state.username == \"\" || this.state.email == \"\" || this.state.password2 == \"\"\n            || this.state.password1 == \"\" || this.state.password1 !== this.state.password2) {\n            this.setState({ errorMessage: \"Please fillup all field!\" });\n        }\n        else {\n\n            this.props.onAuth(\n                event.target.username.value,\n                event.target.email.value,\n                event.target.password1.value,\n                event.target.password2.value\n\n            )\n\n            console.log(event.target.username.value, event.target.email.value, event.target.password1.value, event.target.password2.value);\n            this.props.history.push('/')\n        }\n\n\n\n    }\n\n\n    render() {\n\n        return (\n            <div className=\"signup-div\">\n                <div className=\"heading\">\n                    <h1>Create a Account</h1>\n                </div>\n                {this.state.errorMessage &&\n                    <div style = {{marginBottom: \"10px\"}}>\n                        <Alert\n                            message=\"Error\"\n                            description={this.state.errorMessage}\n                            type=\"error\"\n                            showIcon\n                        />\n                    </div>\n\n                }\n                <Form onSubmitCapture={this.handleSubmit}>\n\n                    <Form.Item\n\n                        rules={[\n                            {\n                                required: true,\n                                message: 'Please input your Username!',\n                                whitespace: true,\n                            },\n                        ]}\n                    >\n\n                        <Input\n                            prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"Username\"\n                            name=\"username\"\n                            onChange={this.handleUsernameChange}\n                            value={this.state.username}\n\n                        />\n\n                    </Form.Item>\n\n                    <Form.Item\n\n                        rules={[\n                            {\n                                type: 'email', message: 'The input is not valid E-mail!',\n                            },\n                            {\n                                required: true, message: 'Please input your E-mail!',\n                                whitespace: true,\n                            }\n\n                        ]}\n                    >\n                        <Input prefix={<MailOutlined className=\"site-form-item-icon\" />} placeholder=\"Email\" name=\"email\"\n                            onChange={this.handleEmailChange}\n                            value={this.state.email}\n                            pattern=\"^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$\"\n                            title=\"Invalid email!\"\n\n                        />\n\n                    </Form.Item>\n\n                    <Form.Item\n                        name=\"password\"\n\n                        rules={[\n                            {\n                                required: true,\n                                message: 'Minimum 8 character !',\n                                min: 8,\n\n\n                            },\n\n                        ]}\n                        hasFeedback\n                    >\n                        <Input.Password\n                            prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                            type=\"password\"\n                            placeholder=\"Password\"\n                            name=\"password1\"\n                            onChange={this.handlePassword1Change}\n                            value={this.state.password1}\n                            pattern=\"^(?=(?:.*?[A-Z]){2})(?=.*?[a-z])(?=(?:.*?[0-9]){2}).*$\"\n\n                            title=\"At least 2 uppercase, 1 lowercase, 2 digits!\"\n                        />\n\n                    </Form.Item>\n\n                    <Form.Item\n                        name=\"confirm\"\n\n                        dependencies={['password']}\n                        hasFeedback\n                        rules={[\n                            {\n                                required: true,\n                                message: 'Please confirm your password!',\n                                whitespace: false,\n                            },\n                            ({ getFieldValue }) => ({\n                                validator(rule, value) {\n                                    if (!value || getFieldValue('password') === value) {\n                                        return Promise.resolve();\n                                    }\n\n                                    return Promise.reject('The two passwords that you entered do not match!');\n                                },\n                            }),\n                        ]}\n                    >\n                        <Input.Password\n                            prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                            type=\"password\"\n                            placeholder=\"Confirm Password\"\n                            name=\"password2\"\n                            onChange={this.handlePassword2Change}\n                            value={this.state.password2}\n\n                        />\n                    </Form.Item>\n                    <Form.Item>\n                        <Button type=\"primary\" htmlType=\"submit\" style={{ marginRight: '10px' }}>\n                            Signup\n                    </Button>\n                    Or\n                    <NavLink\n                            style={{ marginRight: '10px' }}\n                            to='/login/'> Login\n                    </NavLink>\n                    </Form.Item>\n\n                </Form>\n            </div >\n        );\n    }\n};\n\n\n\nconst mapsStateToProps = (state) => {\n    return {\n        loading: state.loading,\n        error: state.error\n    }\n}\n\nconst mapDispatchProps = dispatch => {\n    return {\n        onAuth: (username, email, password1, password2) => dispatch(actions.authSignup(username, email, password1, password2))\n    }\n}\n\n\n\nexport default connect(mapsStateToProps, mapDispatchProps)(RegistrationForm);","import React from 'react'\nimport { UserOutlined } from '@ant-design/icons';\nimport { Avatar } from 'antd';\n\nfunction ProfileView(props) {\n\n    return (\n        <div>\n            <div class=\"container main-secction\">\n                <div class=\"row\">\n\n                    <div class=\"row user-left-part\" style={{}}>\n                        <div class=\"col-md-3 col-sm-3 col-xs-12 user-profil-part pull-left\">\n                            <div class=\"row \">\n                                <div class=\"col-md-12 col-md-12-sm-12 col-xs-12 user-image text-center\">\n                                    <Avatar size={160}\n                                        style={{ color: '#f56a00', backgroundColor: '#fde3cf' }}>\n                                        <p style={{ fontSize: \"4rem\" }}>\n                                            { ((props.user.username || \"\").substring(0,2) || \"\").toUpperCase()}\n                                        </p>\n                                    </Avatar>\n\n                                </div>\n                                <div class=\"col-md-12 col-sm-12 col-xs-12 user-detail-section1 text-center\">\n                                    <button id=\"btn-contact\" data-toggle=\"modal\" data-target=\"#\" class=\"btn btn-success btn-block follow\">Update Profile</button>\n                                </div>\n\n                            </div>\n                        </div>\n\n                        <div class=\"col-md-9 col-sm-9 col-xs-12 pull-right profile-right-section\" >\n                            <div class=\"row profile-right-section-row\" style={{ marginLeft: \"10px\" }}>\n\n                                <div class=\"col-md-12\">\n                                    <div class=\"row\">\n                                        <div class=\"col-md-8\">\n                                            <ul class=\"nav nav-tabs\" role=\"tablist\">\n                                                <li class=\"nav-item\">\n                                                    <a class=\"nav-link active\" href=\"#profile\" role=\"tab\" data-toggle=\"tab\"><i class=\"fas fa-user-circle\"></i> Personal Informatión</a>\n                                                </li>\n                                                <li class=\"nav-item\">\n                                                    <a class=\"nav-link\" href=\"#buzz\" role=\"tab\" data-toggle=\"tab\"><i class=\"fas fa-info-circle\"></i> Portal Informatión</a>\n                                                </li>\n                                            </ul>\n\n\n                                            <div class=\"tab-content\">\n                                                <div role=\"tabpanel\" class=\"tab-pane fade show active\" id=\"profile\">\n                                                    <div class=\"row\">\n                                                        <div class=\"col-md-6\">\n                                                            <label>Username</label>\n                                                        </div>\n                                                        <div class=\"col-md-6\">\n                                                            <p>{props.user.username}</p>\n                                                        </div>\n                                                    </div>\n                                                    <div class=\"row\">\n                                                        <div class=\"col-md-6\">\n                                                            <label>Email</label>\n                                                        </div>\n                                                        <div class=\"col-md-6\">\n                                                            <p>{props.user.email}</p>\n                                                        </div>\n                                                    </div>\n\n                                                    <div class=\"row\">\n                                                        <div class=\"col-md-6\">\n                                                            <label>Token ID</label>\n                                                        </div>\n                                                        <div class=\"col-md-6\">\n                                                            <p>{props.user.token}</p>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <div role=\"tabpanel\" class=\"tab-pane fade\" id=\"buzz\">\n                                                    <div class=\"row\">\n                                                        <div class=\"col-md-6\">\n                                                            <label>Total Post</label>\n                                                        </div>\n                                                        <div class=\"col-md-6\">\n                                                            <p>{props.totalPost}</p>\n                                                        </div>\n                                                    </div>\n\n                                                </div>\n\n                                            </div>\n\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"modal fade\" id=\"contact\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                <div class=\"modal-dialog\" role=\"document\">\n                    <div class=\"modal-content\">\n                        <div class=\"modal-header\">\n                            <h5 class=\"modal-title\" id=\"contact\">Contactarme</h5>\n                            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                <span aria-hidden=\"true\">×</span>\n                            </button>\n                        </div>\n                        <div class=\"modal-body\">\n                            <div class=\"form-group\">\n                                <p for=\"msj\">Se enviará este mensaje a la persona que desea contactar, indicando que te quieres comunicar con el. Para esto debes de ingresar tu información personal.</p>\n                            </div>\n                            <div class=\"form-group\">\n                                <label for=\"txtFullname\">Nombre completo</label>\n                                <input type=\"text\" id=\"txtFullname\" class=\"form-control\" />\n                            </div>\n                            <div class=\"form-group\">\n                                <label for=\"txtEmail\">Email</label>\n                                <input type=\"text\" id=\"txtEmail\" class=\"form-control\" />\n                            </div>\n                            <div class=\"form-group\">\n                                <label for=\"txtPhone\">Teléfono</label>\n                                <input type=\"text\" id=\"txtPhone\" class=\"form-control\" />\n                            </div>\n                        </div>\n                        <div class=\"modal-footer\">\n                            <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Cancelar</button>\n                            <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\">Guardar</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default ProfileView;\n","import React from 'react'\nimport axios from 'axios'\nimport { Form, Input, Button, Alert } from 'antd';\nimport { Link, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux'\nimport Article from \"../components/Article\"\nimport ArticleForm from \"../components/ArticleForm\"\nimport ProfileView from \"../components/ProfileView\"\n\n\n\nclass Profile extends React.Component {\n\n    state = {\n        articles: [],\n        userdata: []\n    }\n\n\n\n    componentDidMount() {\n        const token = localStorage.getItem('token');\n        axios.get(`http://127.0.0.1:8000/myprofile/${token}/`)\n            .then(res => {\n                this.setState({\n                    articles: res.data\n                });\n                console.log(\"article\", this.state.articles)\n            })\n\n        axios.get(`http://127.0.0.1:8000/myprofile/user/${token}/`)\n            .then(result => {\n                this.setState({\n                    userdata: result.data[0]\n                });\n                console.log(\"user\",this.state.userdata)\n            })\n\n    }\n\n\n    render() {\n        return (\n            <div>\n                <ProfileView user={this.state.userdata} totalPost ={this.state.articles.length}/>\n                <div style={{ marginTop: \"10px\" }}>\n                <Article data={this.state.articles}  />\n                </div>\n\n            </div>\n\n        )\n    }\n}\n\n\nexport default Profile;","import React from 'react'\nimport { Route } from 'react-router-dom'\n\nimport ArticleList from \"./containers/ArticleListView\"\nimport ArticleDetail from \"./containers/ArticleDetailView\"\nimport Login from \"./containers/Login\"\nimport Signup from \"./containers/Signup\"\nimport Profile from \"./containers/Profile\"\n\n\nconst BaseRouter = () => (\n    <div>\n        <Route exact path='/' component={ArticleList} />\n        <Route exact path='/articles/:articleID/' component={ArticleDetail} />\n        <Route exact path='/login/' component={Login} />\n        <Route exact path='/signup/' component={Signup} />\n        <Route exact path='/profile/' component={Profile} />\n    </div>\n);\n\nexport default BaseRouter;","import React, { Component } from 'react'\nimport { Link, withRouter } from 'react-router-dom';\nimport { UserOutlined } from '@ant-design/icons';\nimport \"./layout.css\"\nimport { Layout, Menu, Breadcrumb } from 'antd';\nimport { connect } from 'react-redux';\nimport * as actions from '../store/actions/auth';\n\nconst { Header, Content, Footer } = Layout;\nclass CustomLayout extends React.Component {\n\n    changeSelected = (key) => {\n        localStorage.setItem('key', key);\n        console.log(localStorage.getItem('key'))\n    }\n    render() {\n\n        return (\n            <Layout>\n                <Header style={{ position: 'fixed', zIndex: 1, width: '100%' }}>\n                    <div className=\"logo\" >Shuvo</div>\n                    <Menu theme=\"dark\" mode=\"horizontal\"\n                        defaultSelectedKeys={[localStorage.getItem('key')]}>\n                        <Menu.Item key=\"1\" onClick={() => this.changeSelected('1')}>\n                            <Link to=\"/\">Portal</Link>\n                        </Menu.Item>\n\n                        {\n                            this.props.isAuthenticated ?\n\n                                <Menu.Item key=\"2\" onClick={this.props.logout}>\n                                    <Link to=\"/\" onClick={() => this.changeSelected('1')}>Logout</Link>\n                                </Menu.Item>\n\n                                :\n                                <Menu.Item key=\"2\" onClick={() => this.changeSelected('2')} >\n                                    <Link to=\"/login/\">Login</Link>\n                                </Menu.Item>\n\n                        }\n                        {\n                            this.props.isAuthenticated ?\n                                <Menu.Item key=\"3\" onClick={() => this.changeSelected('3')}>\n                                    <Link to=\"/profile/\"><UserOutlined />{localStorage.getItem('username')}</Link>\n                                </Menu.Item>\n\n                                :\n                                <Menu.Item key=\"3\"></Menu.Item>\n\n                        }\n\n\n\n                    </Menu>\n\n                </Header>\n\n                <Content className=\"site-layout\" style={{ padding: '0 50px', marginTop: 64 }}>\n                    <Breadcrumb style={{ margin: '16px 0' }}>\n                        <Breadcrumb.Item><Link to=\"/\">Home</Link></Breadcrumb.Item>\n                        <Breadcrumb.Item><Link to=\"/\">List</Link></Breadcrumb.Item>\n\n                    </Breadcrumb>\n\n                    <div className=\"site-layout-background\" style={{ padding: 24, minHeight: 380 }}>\n                        {this.props.children}\n                    </div>\n\n                </Content>\n\n                <Footer style={{ textAlign: 'center' }}>Ant Design ©2020 Created by Shahin Shuvo</Footer>\n            </Layout>\n        );\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        logout: () =>\n            dispatch(actions.logout())\n    }\n}\n\nexport default withRouter(connect(null, mapDispatchToProps)(CustomLayout));","import React, { Component } from 'react';\nimport 'antd/dist/antd.css';\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport BaseRouter from './routes'\nimport * as actions from './store/actions/auth';\n\n\nimport CustomLayout from \"./containers/Layout\"\n\nclass App extends Component {\n\n  componentDidMount() {\n    this.props.onTryAutoSignup();\n   \n\n  }\n  render() {\n   \n    return (\n      <div>\n        <Router>\n          <CustomLayout {...this.props}>\n            <BaseRouter />\n          </CustomLayout>\n        </Router>\n      </div>\n    );\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.token !== null\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTryAutoSignup: () => dispatch(actions.authCheckState())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const updateObject =(prevValue, newValue)=>{\n    return{\n        ...prevValue,\n        ...newValue\n    }\n}","import * as actionTypes from '../actions/actionType'\nimport { updateObject } from '../utility'\n\nconst initialState = {\n    token: null,\n    error: null,\n    loading: false\n\n}\n\nconst authStart = (state, action) => {\n    return updateObject(state, {\n        error: null,\n        loading: true\n    });\n}\n\nconst authSuccess = (state, action) => {\n    return updateObject(state, {\n        token: action.token,\n        loading: false,\n        error: null\n    });\n}\n\nconst authFail = (state, action) => {\n    return updateObject(state, {\n        error: action.error,\n        loading: false\n    });\n}\nconst authLogout = (state, action) => {\n    return updateObject(state, {\n        token: null\n    });\n}\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.AUTH_START: return authStart(state, action);\n        case actionTypes.AUTH_SUCCESS: return authSuccess(state, action);\n        case actionTypes.AUTH_FAIL: return authFail(state, action);\n        case actionTypes.AUTH_LOGOUT: return authLogout(state, action);\n        default:\n            return state;\n    }\n}\n\n\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\nimport reducer from './store/reducers/auth';\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { Provider } from 'react-redux';\n\n\n\n\nconst composeEnhances = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\nconst store = createStore(reducer, composeEnhances(\n  applyMiddleware(thunk)\n));\n\n\nconst app = (\n  <Provider store={store}>\n    <App />\n  </Provider>\n)\n\nReactDOM.render(app, document.getElementById('root'));\nserviceWorker.unregister();"],"sourceRoot":""}